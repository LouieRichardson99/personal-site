---
import Image from 'astro/components/Image.astro';
import headerImage from '@assets/louie-richardson.jpeg';
import ThemeSwitcher from './ThemeSwitcher.astro';
import { Icon } from 'astro-icon/components';
---

<header>
  <nav class="container">
    <div class="intro">
      <div class="inner-intro-container">
        <a href="/">
          <Image
            src={headerImage}
            alt="Louie Richardson"
            loading="eager"
            class="image"
          />
        </a>
        <div>
          <a href="/">
            <p class="name">Louie Richardson</p>
          </a>
          <p class="position">Front-end Developer</p>
        </div>
      </div>
      <button class="burger-menu" aria-label="Open navigation menu">
        <Icon name="menu-icon" />
      </button>
    </div>
    <div class="nav-wrapper">
      <div class="nav-wrapper-inner">
        <ul>
          <li><a href="/experience">Experience</a></li>
          <li><a href="/blog">Blog</a></li>
          <li><a href="mailto:louie@louierichardson.com">Contact</a></li>
        </ul>
        <ThemeSwitcher />
      </div>
    </div>
  </nav>
</header>

<style lang="scss">
  @use '@styles/_breakpoints' as *;

  header {
    background-color: var(--color-bg);
    position: sticky;
    top: 0;
    padding: 1.25rem 0;
    border-bottom: 1px solid
      color-mix(in srgb, var(--color-fg), var(--color-bg) 90%);
    z-index: 1000;
  }

  .intro {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .inner-intro-container {
    display: flex;
    align-items: center;
    gap: 0.75rem;
  }

  .burger-menu {
    background-color: color-mix(in srgb, var(--color-fg), var(--color-bg) 95%);
    display: block;
    padding: 0.5rem;
    border: 1px solid color-mix(in srgb, var(--color-fg), var(--color-bg) 85%);
    border-radius: 5px;
    display: flex;
    align-items: center;
    justify-content: center;
    width: max-content;
    cursor: pointer;
    transition: background-color 200ms ease;

    @include mq(small) {
      display: none;
    }

    svg {
      color: var(--color-fg);
      width: 1.25rem;
      height: 1.25rem;
    }

    &:hover,
    &:focus {
      background-color: color-mix(
        in srgb,
        var(--color-fg),
        var(--color-bg) 90%
      );
    }
  }

  .name {
    font-size: 1.125rem;
    line-height: 1;
    margin-bottom: 0.5rem;
  }

  .position {
    font-size: 0.825rem;
    line-height: 1;
    opacity: 0.8;
  }

  .nav-wrapper {
    display: grid;
    grid-template-rows: 0fr;
    transition:
      200ms grid-template-rows ease,
      200ms padding-top ease,
      500ms opacity ease,
      500ms visibility ease;
    opacity: 0;
    visibility: hidden;

    @include mq(small) {
      grid-template-rows: 1fr;
      padding-top: 0;
      opacity: 1;
      visibility: visible;
    }
  }

  .nav-wrapper-inner {
    display: flex;
    align-items: center;
    gap: 1.25rem;
    overflow-y: hidden;
  }

  nav {
    display: flex;
    flex-direction: column;

    @include mq(small) {
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
    }

    &[open] {
      .nav-wrapper {
        grid-template-rows: 1fr;
        padding-top: 1.5rem;
        opacity: 1;
        visibility: visible;
      }
    }
  }

  ul {
    display: flex;
    list-style: none;
    gap: 1.5rem;
  }

  a {
    font-weight: 400;
    color: var(--color-fg);
    text-decoration: none;
    transition: 200ms color ease;

    &:hover,
    &:focus {
      color: var(--bright-blue);
    }
  }

  .image {
    border-radius: 50%;
    width: 3rem;
    height: 3rem;
    transition: 200ms transform ease;

    &:hover,
    &:focus {
      transform: scale(1.2);
      border: 1px solid var(--bright-blue);
    }
  }
</style>

<script is:inline>
  const burgerMenu = document.querySelector('.burger-menu');
  let menuOpen = false;

  if (burgerMenu) {
    burgerMenu.addEventListener('click', () => {
      menuOpen = !menuOpen;
      document.querySelector('nav')?.toggleAttribute('open');
      burgerMenu.setAttribute(
        'aria-label',
        menuOpen ? 'Close navigation menu' : 'Open navigation menu'
      );
    });
  }
</script>
