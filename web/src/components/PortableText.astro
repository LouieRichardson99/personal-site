---
import { portableTextToHtml } from 'astro-sanity'
import { PortableTextComponents, uriLooksSafe } from '@portabletext/to-html'
import linkResolver from '@utils/linkResolver'

const { portableText } = Astro.props

const components: PortableTextComponents = {
  marks: {
    link: ({ children, value }) => {
      const href = linkResolver(value)

      if (href === null) {
        return children
      }

      const newTab = value?.newTab ? true : false

      if (uriLooksSafe(href)) {
        const rel = href.startsWith('/') ? undefined : 'noreferrer noopener'

        return `<a 
          href="${href}" 
          rel="${rel}" 
          target="${newTab ? '_blank' : '_self'}"
          >
          ${children}
        </a>`
      }

      // If the URI appears unsafe, render the children (eg, text) without the link
      return children
    }
  }
}
---

<Fragment set:html={portableTextToHtml(portableText, components)} />
